#!/bin/bash
# Final DNS Loop with Menu, Red Banner, Wakelock, and Autorun

# Core DNS Variables - DO NOT TOUCH
NS=''
NS1=''
NS2=''
NS3=''
NS4=''
NS5='ns-gtm.rafed.xyz'
NS6='ns-weew.rafed.xyz'
A=''

LOOP_DELAY=0

declare -a HOSTS=(
    '124.6.181.31'
    '124.6.181.171'
    '124.6.181.26'
    '124.6.181.27'
    '124.6.181.25'
)

# Banner Function
banner() {
    echo -e "\e[1;31m" # Red Color
    echo "███████╗██╗███╗   ██╗███████╗██╗    ██╗██╗  ██╗██╗███╗   ██╗ ██████╗ "
    echo "██╔════╝██║████╗  ██║██╔════╝██║    ██║██║ ██╔╝██║████╗  ██║██╔═══██╗"
    echo "███████╗██║██╔██╗ ██║█████╗  ██║ █╗ ██║█████╔╝ ██║██╔██╗ ██║██║   ██║"
    echo "╚════██║██║██║╚██╗██║██╔══╝  ██║███╗██║██╔═██╗ ██║██║╚██╗██║██║   ██║"
    echo "███████║██║██║ ╚████║███████╗╚███╔███╔╝██║  ██╗██║██║ ╚████║╚██████╔╝"
    echo "╚══════╝╚═╝╚═╝  ╚═══╝╚══════╝ ╚══╝╚══╝ ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝ "
    echo "                     JUMAWAN WEEWKING"
    echo -e "\e[0m"
}

# Check DNSUTILS
if ! command -v dig &> /dev/null; then
    banner
    echo -e "\e[31m[!] Please install dnsutils first! (pkg install dnsutils)\e[0m"
    exit 1
fi

# Network Booster
network_booster() {
    echo "Starting network booster..."
    while true; do
        for host in "${HOSTS[@]}"; do
            ping -c 1 "${host}" >/dev/null &
        done
        wait
    done
}

# DNS Check Function (Core - Do Not Touch)
check() {
    for host in "${HOSTS[@]}"; do
        for R in "${A}" "${NS}" "${NS1}" "${NS2}" "${NS3}" "${NS4}" "${NS5}" "${NS6}"; do
            [ -z "$R" ] && continue
            if [ -z "$(dig "@${host}" "${R}")" ]; then
                echo -e "\e[31mFailed - Querying: ${R} from ${host}\e[0m"
            else
                echo -e "\e[32mSuccess - Querying: ${R} from ${host}\e[0m"
            fi
        done
    done
}

# Menu Functions
add_ns() {
    read -p "Enter NS to add: " NS
    echo -e "\e[32mNS set to: $NS\e[0m"
}

check_ns() {
    echo -e "\e[33mCurrent NS:\e[0m"
    for ns_var in NS NS1 NS2 NS3 NS4 NS5 NS6; do
        eval "val=\${$ns_var}"
        [ -n "$val" ] && echo "$val"
    done
}

delete_ns() {
    echo -e "\e[31mClearing custom NS entries...\e[0m"
    NS=''; NS1=''; NS2=''; NS3=''; NS4=''
}

start_loop() {
    banner
    echo "Script loop: ${LOOP_DELAY} seconds"
    network_booster & NETWORK_BOOSTER_PID=$!
    trap 'kill $NETWORK_BOOSTER_PID 2>/dev/null; exit' 2 15
    while true; do
        check
        echo '-----------------------------------------'
        sleep "${LOOP_DELAY}"
    done
}

# Wakelock (Termux)
termux-wake-lock 2>/dev/null

# Autorun Setup
mkdir -p ~/.termux
echo 'bash ~/dnsloop.sh' > ~/.termux/boot.sh
chmod +x ~/.termux/boot.sh

# Main Menu
while true; do
    banner
    echo -e "\e[36m1) Add NS"
    echo "2) Check NS"
    echo "3) Delete NS"
    echo "4) Start Loop"
    echo "5) Exit\e[0m"
    read -p "Select option: " opt
    case $opt in
        1) add_ns ;;
        2) check_ns ;;
        3) delete_ns ;;
        4) start_loop ;;
        5) echo "Exiting..."; exit ;;
        *) echo "Invalid option" ;;
    esac
done
