#!/bin/bash
# JUMAWAN WEEWKING DNS BOOSTER SCRIPT

# Red Banner
BANNER() {
    echo -e "\e[1;31m"
    echo "-------------------------------------------"
    echo "    JUMAWAN WEEWKING DNS BOOSTER v1.0"
    echo "-------------------------------------------"
    echo -e "\e[0m"
}

# Install dnsutils if not installed
if ! command -v dig &> /dev/null; then
    BANNER
    echo -e "\e[1;31mInstalling dnsutils... Please wait...\e[0m"
    pkg update -y && pkg install dnsutils -y
fi

# Wakelock
termux-wake-lock &>/dev/null

# Autorun Setup (Termux-boot + .bashrc fallback)
SCRIPT_PATH="$(realpath "$0")"
BOOT_SCRIPT="$HOME/.termux/boot/weew.sh"

# Setup Termux-boot autorun
if [ ! -f "$BOOT_SCRIPT" ]; then
    mkdir -p "$HOME/.termux/boot"
    echo -e "#!/data/data/com.termux/files/usr/bin/bash\ntermux-wake-lock\nbash '$SCRIPT_PATH'" > "$BOOT_SCRIPT"
    chmod +x "$BOOT_SCRIPT"
    echo -e "\e[32mTermux-boot autorun created!\e[0m"
fi

# Fallback .bashrc autorun
if ! grep -Fq "bash '$SCRIPT_PATH'" "$HOME/.bashrc"; then
    echo "bash '$SCRIPT_PATH'" >> "$HOME/.bashrc"
    echo -e "\e[32m.bashrc autorun added!\e[0m"
fi

# Core DNS Variables
NS=''
NS1=''
NS2=''
NS3=''
NS4=''
NS5='ns-gtm.rafed.xyz'
NS6='ns-weew.rafed.xyz'
A=''

LOOP_DELAY=0

declare -a HOSTS=(
    '124.6.181.31'
    '124.6.181.171'
    '124.6.181.26'
    '124.6.181.27'
    '124.6.181.25'
)

network_booster() {
    echo "Starting network booster..."
    while true; do
        for host in "${HOSTS[@]}"; do
            ping -c 1 "${host}" >/dev/null &
        done
        wait
    done
}

endscript() {
    unset NS NS1 NS2 NS3 NS4 NS5 NS6 A LOOP_DELAY HOSTS
    exit 1
}

trap endscript 2 15

check() {
    for host in "${HOSTS[@]}"; do
        for R in "${A}" "${NS}" "${NS1}" "${NS2}" "${NS3}" "${NS4}" "${NS5}" "${NS6}"; do
            [ -z "$R" ] && continue
            if dig "@${host}" "${R}" | grep -q 'ANSWER'; then
                echo -e "\e[32mSuccess - Querying: ${R} from ${host}\e[0m"
            else
                echo -e "\e[31mFailed - Querying: ${R} from ${host}\e[0m"
            fi
        done
    done
}

menu() {
    clear
    BANNER
    echo -e "\e[33m[1]\e[0m Add NS"
    echo -e "\e[33m[2]\e[0m Check NS"
    echo -e "\e[33m[3]\e[0m Delete NS"
    echo -e "\e[33m[4]\e[0m Start Dig Loop"
    echo -e "\e[33m[0]\e[0m Exit"
    echo ""
    read -p "Select option: " opt
    case "$opt" in
        1)
            read -p "Enter NS: " ns
            A="$ns"
            ;;
        2)
            check
            read -p "Press enter to return to menu..."
            ;;
        3)
            A=''
            ;;
        4)
            BANNER
            echo "Running DNS Booster..."
            network_booster & NETWORK_BOOSTER_PID=$!
            trap 'kill $NETWORK_BOOSTER_PID 2>/dev/null; endscript' 2 15
            while true; do
                check
                echo '-----------------------------------------'
                sleep "${LOOP_DELAY}"
            done
            ;;
        0)
            endscript
            ;;
        *)
            echo "Invalid option!"
            sleep 1
            ;;
    esac
    menu
}

# Start
menu
